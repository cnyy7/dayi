题目描述
				   
                          排序 
输入一行数字，如果我们把这行数字中的‘5’都看成空格，那么就得到一行用空格分割的若干非负整数（可能有些整数以‘0’开头，这些头部的‘0’应该被忽略掉，除非这个整数就是由若干个‘0’组成的，这时这个整数就是0）。

你的任务是：对这些分割得到的整数，依从大到小的顺序排序输出。



输入
输入包含多组测试用例，每组输入数据只有一行数字（数字之间没有空格），这行数字的长度不大于1000。  

输入数据保证：分割得到的非负整数不会大于100000000；输入数据不可能全由‘5’组成。

输出
对于每个测试用例，输出分割得到的整数排序的结果，相邻的两个整数之间用一个空格分开，每组输出占一行。
 

输入样例
0051231232050775

输出样例
12312320 77 0



标程
#include<iostream>
#include<algorithm>
#include<string>
#include<queue>
#include<cstdio>
using namespace std;
int main()
{
	char str[2010];
	while(scanf("%s",str)!=EOF)
	{
		int a[2010];
		memset(a,0,sizeof(a));
		queue<char>s;
		int cnt,i,l=strlen(str);
		cnt=0;
		for(i=0;i<l;i++)
		{
			if(str[i]!='5')
				s.push(str[i]);
			if((str[i]=='5'||i==l-1)&&(!s.empty()))//判断是否为空，如果为空那么不用存值了
			{
				int num=0;
				while(!s.empty())//字符型转化为整型
				{
					char pos=s.front();s.pop();
					num=num*10+pos-'0';
				}
				a[cnt++]=num;
			}
		}
		sort(a,a+cnt);
		for(i=cnt-1;i>=0;i--)
			i?printf("%d ",a[i]):printf("%d\n",a[i]);
	}
	return 0;
}