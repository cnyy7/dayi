题目描述
				    成绩排序
   给定录取分数线，请你写程序找出最后通过分数线的考生，并将他们的成绩按降序打印。 


输入
测试输入包含若干场考试的信息。每场考试信息的第1行给出考生人数N ( 0 < N < 1000 )、考题数M ( 0 < M < = 10 )、分数线（正整数）G；第2行排序给出第1题至第M题的正整数分值；以下N行，每行给出一 
名考生的准考证号（长度不超过20的字符串）、该生解决的题目总数m、以及这m道题的题号 （题目号由1到M）。 
当读入的考生人数为0时，输入结束，该场考试不予处理。 

输出
对每场考试，首先在第1行输出不低于分数线的考生人数n，随后n行按分数从高到低输出上线考生的考号与分数，其间用1空格分隔。若有多名考生分数相同，则按他们考号的升序输出。


输入样例
4 5 25
10 10 12 13 15
CS004 3 5 1 3
CS003 5 2 4 1 3 5
CS002 2 1 2
CS001 3 2 3 5
1 2 40
10 30
CS001 1 2
2 3 20
10 10 10
CS000000000000000001 0
CS000000000000000002 2 1 2
0

输出样例
3
CS003 60
CS001 37
CS004 37
0
1
CS000000000000000002 20
 

标程
#include <stdio.h>  
#include <string.h>  
#include <algorithm>  
using namespace std;  
struct node  
{  
    char num[25];  
    int sco;  
}c[1005];  
bool cmp(node x,node y)  
{  
    if(x.sco>y.sco) return true;  
    if(x.sco==y.sco&&strcmp(x.num,y.num)<0) return true;  
    return false;  
}  
int main()  
{  
    int n,m,p,a[15];  
    while(scanf("%d",&n)!=EOF)  
    {  
        if(n==0)  
        break;  
        int count=0;  
        scanf("%d %d",&m,&p);  
        for(int i=0;i<m;i++)  
        scanf("%d",&a[i]);  
        for(int i=0;i<n;i++)  
        {  
            int x;  
            scanf("%s %d",c[i].num,&x);  
            c[i].sco=0;  
            for(int j=0;j<x;j++)  
            {  
                int temp;  
                scanf("%d",&temp);  
                c[i].sco+=a[temp-1];  
            }  
            if(c[i].sco>=p)  
            count++;  
        }  
        sort(c,c+n,cmp);  
        printf("%d\n",count);  
        for(int i=0;i<count;i++)  
        printf("%s %d\n",c[i].num,c[i].sco);  
    }  
    return 0;  
}  